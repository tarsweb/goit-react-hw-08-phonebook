{"version":3,"file":"static/js/714.1de685ae.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { selectFilter } from 'redux/filter/selectors'\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectShowContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n   if (!filter) return contacts;\n   return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n});\n\nexport const selectContactsName = createSelector([selectContacts], contacts => {\n  return contacts.reduce((acc, element) => acc = [...acc, element.name.toLowerCase()],[])\n});","export const selectFilter = state => state.filter;","import styled from 'styled-components'\n\nconst Input = styled.input``\n\nconst LabelStyled = styled.label`\n  display:flex;\n  gap:${({theme}) => theme.space.normal}\n`\n\nconst ButtonStyled = styled.button`\n  display : inline-flex;\n  gap: ${({theme}) => theme.space.normal};\n\n  &:hover, &:focus {\n    color :  ${({theme}) => theme.colors.accentAltenative};\n    background: ${({theme}) => theme.colors.primary};\n    border-color: transparent;\n  }\n`\n\nconst FormStyled = styled.form`\n  display:flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;  \n  gap:${({theme}) => theme.space.normal};\n  padding: ${({theme}) => theme.space.large};\n  border: 1px solid ${({theme}) => theme.colors.accentAltenative};\n  border-radius: ${({theme}) => theme.radii.normal};\n`\n\nconst ErrorMessageStyled = styled.div`\n  color:${({theme}) => theme.colors.offline};\n  font-size: ${ ({theme}) => theme.fontSizes[\"12\"]};\n  text-align: end\n`\n\nexport {FormStyled, ErrorMessageStyled, LabelStyled, Input, ButtonStyled}","import { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\n\nimport { selectContactsName } from \"redux/contacts/selectors\"\n\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\nimport {AiOutlineUserAdd } from 'react-icons/ai';\n\nimport Box from \"components/Box\";\nimport {FormStyled, ErrorMessageStyled, LabelStyled, Input, ButtonStyled} from './ContactForm.styled'\n\nconst nameReExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(3, `Name must be at least 3 characters`).matches(nameReExp, 'Name is not valid').required('Name is required'),\n  number: Yup.string().max(13, `Phone number must be at most 13 characters`).matches(phoneRegExp, 'Phone is not valid').required('Phone is required'),\n});\n\nconst ContactForm = () => { \n  const dispatch = useDispatch();\n\n  const contactsName = useSelector(selectContactsName);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: ''\n    },\n    validationSchema : schema, \n    onSubmit: (values, { resetForm }) => {\n      const contactName = values.name;\n      if (contactsName.includes(contactName.toLowerCase())) alert(`${contactName} is already in contacts`)\n      else {\n        dispatch(addContact(values));\n        resetForm();\n      }\n    },\n  });\n\n  return (\n    // <Box\n    //   as=\"form\"\n    //   autoComplete=\"off\"\n    //   display=\"flex\"\n    //   flexWrap=\"wrap\"\n    //   alignItems=\"flex-start\"\n    //   py={theme.space.normal}\n    //   gridGap={theme.space.normal}\n    //   onSubmit={formik.handleSubmit}\n      \n    // >\n    <FormStyled onSubmit={formik.handleSubmit}>\n      <Box display=\"flex\" flexDirection=\"column\">\n        <LabelStyled>\n          Name\n          <Input type=\"text\" name=\"name\" value={formik.values.name} onChange={formik.handleChange}/>\n        </LabelStyled>\n        {formik.touched.name && formik.errors.name ? \n           <ErrorMessageStyled> {formik.errors.name} </ErrorMessageStyled> : null}\n      </Box>\n\n      <Box display=\"flex\" flexDirection=\"column\">\n        <LabelStyled>\n          Phone\n          <Input type=\"tel\" name=\"number\" value={formik.values.number} onChange={formik.handleChange} />\n        </LabelStyled>\n        {formik.touched.number && formik.errors.number ? \n           <ErrorMessageStyled> {formik.errors.number} </ErrorMessageStyled> : null}\n      </Box>\n\n      <ButtonStyled type=\"submit\"> <AiOutlineUserAdd /> Add contact </ButtonStyled>\n      \n    </FormStyled>\n    // </Box>\n  );\n}\n\nexport { ContactForm } ","import styled from 'styled-components';\n\nconst Label = styled.label`\n  display:flex;\n  gap:${({theme}) => theme.space.normal};\n  padding-top: ${({theme}) => theme.space.normal};\n`\nconst Input = styled.input`\n  border-color:transparent;\n`\n\nexport { Label,  Input}","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/slice';\n\nimport debounce from 'lodash.debounce';\n\nimport { Label } from './Filter.styled';\n\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  }\n\n  const debouncedChangeFilter = debounce(handleChangeFilter, 500);\n\n  return (\n    <Label>\n      Find contact by name\n      <input type='text' onChange={debouncedChangeFilter} />\n    </Label>\n  )\n}\n\nexport { Filter }","import styled from 'styled-components'\n\nconst ButtonStyled = styled.button`\n  display : inline-flex;\n  gap: ${({theme}) => theme.space.normal};\n\n  &:hover, &:focus {\n    color :  ${({theme}) => theme.colors.offline};\n    background: ${({theme}) => theme.colors.primary};\n    border-color: transparent;\n  }\n`\n\nexport { ButtonStyled }","import { useTheme } from 'styled-components';\n\nimport { useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { selectError, selectIsLoading, selectShowContacts } from \"redux/contacts/selectors\"\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\n\nimport { ButtonStyled } from './ContactList.styled'\n\nimport {AiOutlineUserDelete } from 'react-icons/ai';\n\nimport Box from 'components/Box';\n\nconst ContactList = () => {\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectShowContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      as=\"ul\"\n      py={theme.space.large}\n      display=\"flex\"\n      gridGap={theme.space.small}\n      flexDirection=\"column\"\n    >\n      {isLoading && !error && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      {contacts.length ?\n        contacts.map(({ id, name: contactName, number: phoneNumber }) => (\n          <Box\n            key={id}\n            as=\"li\"\n            p={theme.space.normal}\n            fontWeight={theme.fontWeights.bold}\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            aligItems=\"flex-start\"\n            border={`1px solid ${theme.colors.border}`}\n          >\n            <Box>\n              <span> {contactName} </span>\n              <span> {phoneNumber} </span>\n            </Box>\n            <ButtonStyled type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n              <AiOutlineUserDelete/>\n              Delete\n            </ButtonStyled>\n          </Box>\n        )) : null}\n    </Box>\n  );\n};\n\nexport { ContactList }","import Box from \"components/Box\"\n\nimport ContactForm from \"components/ContactForm\"\nimport Filter from \"components/Filter\"\nimport ContactList from \"components/ContactList\"\n\nconst Contacts = () => {\n  return (\n    <Box >\n      <ContactForm />\n      <Filter/>\n      <ContactList />\n    </Box>\n  )\n}\n\nexport { Contacts as default}"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectShowContacts","createSelector","filter","contact","name","toLowerCase","includes","selectContactsName","reduce","acc","element","Input","styled","LabelStyled","theme","space","normal","ButtonStyled","colors","accentAltenative","primary","FormStyled","large","radii","ErrorMessageStyled","offline","fontSizes","schema","Yup","shape","min","matches","required","number","max","ContactForm","dispatch","useDispatch","contactsName","useSelector","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","contactName","alert","addContact","handleSubmit","Box","display","flexDirection","type","value","onChange","handleChange","touched","errors","Label","Filter","debouncedChangeFilter","debounce","event","setFilter","target","ContactList","useTheme","useEffect","fetchContacts","as","py","gridGap","small","length","map","id","phoneNumber","p","fontWeight","fontWeights","bold","justifyContent","aligItems","border","onClick","deleteContact","Contacts"],"sourceRoot":""}