{"version":3,"file":"static/js/802.38c80db6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/filter/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { selectFilter } from 'redux/filter/selectors'\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectShowContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n   if (!filter) return contacts;\n   return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n});\n\nexport const selectContactsName = createSelector([selectContacts], contacts => {\n  return contacts.reduce((acc, element) => acc = [...acc, element.name.toLowerCase()],[])\n});","export const selectFilter = state => state.filter;","import { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\n\nimport { selectContactsName } from \"redux/contacts/selectors\"\n\nimport { useState } from \"react\";\nimport { useTheme } from \"styled-components\";\n\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\nimport Box from \"components/Box\";\n\nimport { TextField, Button, Snackbar, Alert} from '@mui/material';\n\nimport PhoneIcon from '@mui/icons-material/Phone';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\nconst nameReExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst phoneRegExp = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(3, `Name must be at least 3 characters`).matches(nameReExp, 'Name is not valid').required('Name is required'),\n  number: Yup.string().max(13, `Phone number must be at most 13 characters`).matches(phoneRegExp, 'Phone is not valid').required('Phone is required'),\n});\n\nconst ContactForm = () => { \n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const handleClose = (event) => {\n    if (event === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const contactsName = useSelector(selectContactsName);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: ''\n    },\n    validationSchema : schema, \n    onSubmit: (values, { resetForm }) => {\n      const contactName = values.name;\n      if (contactsName.includes(contactName.toLowerCase()))\n      { setOpen(true); setMessage(`${contactName} is already in contacts`)}//alert(`${contactName} is already in contacts`)\n      else {\n        dispatch(addContact(values));\n        resetForm();\n      }\n    },\n  });\n\n  return (\n\n    <Box as=\"form\" display=\"flex\"\n    flexWrap= \"wrap\"\n    justifyContent= \"center\"\n    alignItems= \"flex=start\"  \n    gridGap={theme.space.normal}\n    p={theme.space.large}\n    border={`1px solid ${theme.colors.accentAltenative}`}\n    borderRadius={theme.radii.normal}\n\n    autoComplete=\"off\"\n    onSubmit={formik.handleSubmit}>\n\n      <Box display=\"flex\">\n        <PersonAddIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={!!formik.errors.name}\n          helperText={formik.touched.name && formik.errors.name ? \n            formik.errors.name : null}\n          size=\"small\"\n          sx={{ width : '100%'}}\n        />\n      </Box>\n\n      <Box display=\"flex\">\n        <PhoneIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n        <TextField\n          label=\"Phone\"\n          type=\"tel\"\n          name=\"number\"\n          value={formik.values.number}\n          onChange={formik.handleChange}\n          error={!!formik.errors.number}\n          helperText={formik.touched.number && formik.errors.number ? \n            formik.errors.number : null}\n          size=\"small\"\n          sx={{ width : '100%'}}\n        />\n      </Box>\n\n      <Button variant=\"contained\" type=\"submit\" startIcon={<PersonAddIcon />} > Add contact </Button>\n\n      {open && \n      <Snackbar\n        open={open}\n        autoHideDuration={3000}\n        key='topright'\n      > \n        <Alert onClose={handleClose} severity=\"warning\">{message}</Alert> \n      </Snackbar>}\n      \n    </Box>\n  );\n}\n\nexport { ContactForm }","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/slice';\n\nimport debounce from 'lodash.debounce';\n\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Filter = () => {\n\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  }\n\n  const debouncedChangeFilter = debounce(handleChangeFilter, 500);\n\n  return (\n    <TextField\n      type=\"text\"\n      onChange={debouncedChangeFilter}\n      placeholder=\"Find contact by name\"\n      variant=\"standard\"\n      sx={{ flexGrow : '1'}}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon sx={{ color: 'action.active', mr: 1, my: 0.5 }} />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n\nexport { Filter }","import { useTheme } from 'styled-components';\n\nimport { useState, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { selectError, selectIsLoading, selectShowContacts } from \"redux/contacts/selectors\"\nimport { fetchContacts, deleteContact } from 'redux/contacts/operations';\n\nimport {Button, Snackbar, Alert} from '@mui/material';\n\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\n\nimport Box from 'components/Box';\n\nconst ContactList = () => {\n  const theme = useTheme();\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectShowContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const[openError, setOpenError] = useState(false);\n  const handleCloseError = (event) => {\n    if (event === 'clickaway') {\n      return;\n    }\n    setOpenError(false);\n  };\n \n  useEffect(() => {\n    dispatch(fetchContacts());\n    if (error) setOpenError(true)\n  }, [dispatch, error]);\n\n  return (\n    <Box\n      as=\"ul\"\n      py={theme.space.large}\n      display=\"flex\"\n      gridGap={theme.space.small}\n      flexDirection=\"column\"\n    >\n      {isLoading && !error && <p> Loading contacts... </p>}\n      {error && (\n        <Snackbar open={openError} autoHideDuration={3000} key=\"topright\">\n          <Alert onClose={handleCloseError} severity=\"error\">{error}</Alert>\n        </Snackbar>\n      )}\n      {contacts.length\n        ? contacts.map(({ id, name: contactName, number: phoneNumber }) => (\n            <Box\n              key={id}\n              as=\"li\"\n              p={theme.space.normal}\n              fontWeight={theme.fontWeights.bold}\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              aligItems=\"flex-start\"\n              border={`1px solid ${theme.colors.border}`}\n            >\n              <Box\n                display=\"inline-flex\"\n                alignItems=\"center\"\n                gridGap={theme.space.normal}\n                flexGrow=\"1\"\n              >\n                <Box as=\"span\" flexGrow=\"1\" maxWidth=\"50%\">\n                  {' '}\n                  {contactName}{' '}\n                </Box>\n                <span> {phoneNumber} </span>\n              </Box>\n              <Button\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n                variant=\"outlined\"\n                size=\"small\"\n                color=\"error\"\n                startIcon={<PersonRemoveIcon />}\n              >\n                Delete\n              </Button>\n            </Box>\n          ))\n        : null}\n    </Box>\n  );\n};\n\nexport { ContactList }","import { useState } from \"react\";\n\nimport Box from \"components/Box\"\n\nimport ContactForm from \"components/ContactForm\"\nimport Filter from \"components/Filter\"\nimport ContactList from \"components/ContactList\"\n\nimport { Button, IconButton } from '@mui/material';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\n\nimport { Dialog, DialogContent } from '@mui/material';\n\nconst Contacts = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <Box as=\"main\" minHeight=\"calc(100vh - 80px)\">\n      <Box\n        display=\"flex\"\n        pt=\"8px\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Filter />\n        <Button\n          variant=\"contained\"\n          size=\"small\"\n          type=\"button\"\n          onClick={handleToggle}\n          startIcon={<PersonAddIcon />}\n        >\n          Add contact\n        </Button>\n        {open && (\n          <Dialog\n            sx={{\n              color: 'primary.ligth',\n              zIndex: theme => theme.zIndex.drawer + 1,\n            }}\n            open={open}\n            onClose={handleToggle}\n          >\n            <IconButton\n              aria-label=\"close\"\n              onClick={handleToggle}\n              sx={{\n                position: 'absolute',\n                padding:\"0\",\n                top: '0',\n                right: '0',\n                transform: 'translate(-10%, 1%)',\n              }}\n            >\n              <HighlightOffIcon />\n            </IconButton>\n            <DialogContent>\n              <ContactForm />\n            </DialogContent>\n          </Dialog>\n        )}\n      </Box>\n\n      <ContactList />\n    </Box>\n  );\n};\n\nexport { Contacts as default }"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectShowContacts","createSelector","filter","contact","name","toLowerCase","includes","selectContactsName","reduce","acc","element","schema","Yup","shape","min","matches","required","number","max","ContactForm","theme","useTheme","dispatch","useDispatch","useState","open","setOpen","message","setMessage","contactsName","useSelector","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","contactName","addContact","Box","as","display","flexWrap","justifyContent","alignItems","gridGap","space","normal","p","large","border","colors","accentAltenative","borderRadius","radii","autoComplete","handleSubmit","PersonAdd","sx","color","mr","my","TextField","label","type","value","onChange","handleChange","errors","helperText","touched","size","width","Phone","Button","variant","startIcon","Snackbar","autoHideDuration","Alert","onClose","event","severity","Filter","debouncedChangeFilter","debounce","setFilter","target","placeholder","flexGrow","InputProps","startAdornment","InputAdornment","position","Search","ContactList","openError","setOpenError","useEffect","fetchContacts","py","small","flexDirection","length","map","id","phoneNumber","fontWeight","fontWeights","bold","aligItems","maxWidth","onClick","deleteContact","PersonRemove","Contacts","handleToggle","minHeight","pt","Dialog","zIndex","drawer","IconButton","padding","top","right","transform","HighlightOff","DialogContent"],"sourceRoot":""}