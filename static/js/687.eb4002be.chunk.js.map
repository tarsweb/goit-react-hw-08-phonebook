{"version":3,"file":"static/js/687.eb4002be.chunk.js","mappings":"0PASMA,EAAY,WAEhB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACnBC,QAAQC,IAAI,SAAUH,GACtBX,GAASe,EAAAA,EAAAA,IAAMJ,IACfC,GACD,IAEH,OACE,UAACI,EAAA,EAAD,CACEC,GAAG,OACHC,QAAQ,OACRC,QAAQ,OACRC,cAAc,SACdC,GAAG,OACHC,aAAa,MACbZ,SAAUL,EAAOkB,aAPnB,WASE,UAACP,EAAA,EAAD,CAAKC,GAAG,QAAQC,QAAQ,OAAOE,cAAc,SAA7C,mBAEE,kBACEI,KAAK,QACLC,KAAK,QACLC,MAAOrB,EAAOM,OAAOH,MACrBmB,SAAUtB,EAAOuB,kBAGpB1B,IAAK,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOM,SAAS,8BAAGN,EAAMM,SACnC,UAACQ,EAAA,EAAD,CAAKC,GAAG,QAAQC,QAAQ,OAAOE,cAAc,SAA7C,sBAEE,kBACEI,KAAK,WACLC,KAAK,WACLC,MAAOrB,EAAOM,OAAOF,SACrBkB,SAAUtB,EAAOuB,kBAGpB1B,IAAK,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOO,YAAY,8BAAGP,EAAMO,YACtC,mBAAQe,KAAK,SAAb,sBACCtB,IAAS,uBAAIA,EAAM2B,YAGzB,ECrDKC,EAAQ,WAMZ,OACE,SAAC/B,EAAD,GAEH,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/operations'\nimport { selectError } from 'redux/auth/selectors';\n\nimport { useFormik } from 'formik';\n\nimport Box from 'components/Box';\n\nconst LoginForm = () => {\n\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: (values, { resetForm }) => {\n      console.log('values', values);\n      dispatch(login(values));\n      resetForm();\n    },\n  });\n  return (\n    <Box\n      as=\"form\"\n      display=\"flex\"\n      gridGap=\"16px\"\n      flexDirection=\"column\"\n      py=\"16px\"\n      autocomplete=\"off\"\n      onSubmit={formik.handleSubmit}\n    >\n      <Box as=\"label\" display=\"flex\" flexDirection=\"column\">\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n        />\n      </Box>\n      {error && error?.email && <>{error.email}</>}\n      <Box as=\"label\" display=\"flex\" flexDirection=\"column\">\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n        />\n      </Box>\n      {error && error?.password && <>{error.password}</>}\n      <button type=\"submit\"> Log In </button>\n      {error && <p>{error.message}</p>}\n    </Box>\n  );\n};\n\nexport { LoginForm };","// import { useDispatch  } from 'react-redux'\n\n// import { resetError } from 'redux/auth/slice' \n\nimport LoginForm from \"components/LoginForm\"\n\nconst Login = () => {\n\n  // const dispatch = useDispatch();\n\n  // dispatch(resetError())\n\n  return (\n    <LoginForm />\n  )\n}\n\nexport {Login as default}"],"names":["LoginForm","dispatch","useDispatch","error","useSelector","selectError","formik","useFormik","initialValues","email","password","onSubmit","values","resetForm","console","log","login","Box","as","display","gridGap","flexDirection","py","autocomplete","handleSubmit","type","name","value","onChange","handleChange","message","Login"],"sourceRoot":""}